basePath: /v1
definitions:
  problem.Problem:
    type: object
  server.AccountRequest:
    properties:
      access_token:
        type: string
      expires_at:
        type: integer
      provider:
        type: string
      provider_account_id:
        type: string
    type: object
  server.LoginResponse:
    properties:
      token:
        $ref: '#/definitions/server.LoginTokenResponse'
      user:
        $ref: '#/definitions/server.LoginUserResponse'
    type: object
  server.LoginTokenResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  server.LoginUserResponse:
    properties:
      createdAt:
        type: string
      email:
        type: string
      image:
        type: string
      name:
        type: string
      userID:
        type: string
    type: object
  server.ServerInfo:
    properties:
      environment:
        type: string
      version:
        type: string
    type: object
  server.ServerStatus:
    description: Response for the health check
    properties:
      status:
        description: Status is the health status of the service
        type: string
      system_info:
        allOf:
        - $ref: '#/definitions/server.ServerInfo'
        description: SystemInfo contains information about the system
    type: object
  server.SharedTaskResponse:
    properties:
      dailies:
        items:
          $ref: '#/definitions/server.TaskResponse'
        type: array
      weeklies:
        items:
          $ref: '#/definitions/server.TaskResponse'
        type: array
    type: object
  server.TaskResponse:
    properties:
      completed:
        type: boolean
      hidden:
        type: boolean
      taskID:
        type: string
      title:
        type: string
    type: object
  server.ToggleTaskRequest:
    properties:
      hasCompleted:
        type: boolean
      hasHidden:
        type: boolean
      userID:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
info:
  contact:
    email: nishojib@kupolog.com
    name: nishojib
    url: https://api.kupolog.com/support
  description: This is an API for the Kupolog app.
  license:
    name: MIT
    url: https://opensource.org/license/mit
  termsOfService: https://api.kupolog.com/terms
  title: Swagger Kupolog API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: takes a google or discord account request verifies the account
        and returns a token
      parameters:
      - description: account request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/server.AccountRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.LoginResponse'
        "400":
          description: Bad Request
          schema:
            properties:
              detail:
                type: string
              status:
                type: integer
              title:
                type: string
              type:
                type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              detail:
                type: string
              status:
                type: integer
              title:
                type: string
              type:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              detail:
                type: string
              status:
                type: integer
              title:
                type: string
              type:
                type: string
            type: object
      summary: login
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: refreshes the access token for the user
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              access_token:
                type: string
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              detail:
                type: string
              status:
                type: integer
              title:
                type: string
              type:
                type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              detail:
                type: string
              status:
                type: integer
              title:
                type: string
              type:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              detail:
                type: string
              status:
                type: integer
              title:
                type: string
              type:
                type: string
            type: object
      security:
      - Bearer: []
      summary: refresh token
      tags:
      - auth
  /auth/revoke:
    post:
      consumes:
      - application/json
      description: revokes the refresh token for the user
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            properties:
              detail:
                type: string
              status:
                type: integer
              title:
                type: string
              type:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              detail:
                type: string
              status:
                type: integer
              title:
                type: string
              type:
                type: string
            type: object
      security:
      - Bearer: []
      summary: revoke token
      tags:
      - auth
  /health:
    get:
      description: Checks the health of the service
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.ServerStatus'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/problem.Problem'
      summary: Health check
      tags:
      - health
  /tasks/shared:
    get:
      description: Get the shared tasks
      parameters:
      - description: Kind of tasks to return
        in: query
        name: kind
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.SharedTaskResponse'
        "500":
          description: Internal Server Error
          schema:
            properties:
              detail:
                type: string
              status:
                type: integer
              title:
                type: string
              type:
                type: string
            type: object
      summary: Shared tasks
      tags:
      - tasks
  /tasks/shared/{taskID}:
    put:
      description: toggle a task of the current user
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/server.ToggleTaskRequest'
      - description: Task ID
        in: path
        name: taskID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            properties:
              detail:
                type: string
              status:
                type: integer
              title:
                type: string
              type:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              detail:
                type: string
              status:
                type: integer
              title:
                type: string
              type:
                type: string
            type: object
      summary: Toggle Task
      tags:
      - tasks
securityDefinitions:
  Bearer:
    description: '"Type ''Bearer TOKEN'' to correctly set the API Key"'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
